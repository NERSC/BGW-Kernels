EXE = gppCustomComplex_OMP4.ex
SRC = gppCustomComplex_OMP4.cpp

#CXX = xlc++_r
#CXX = CC 
CXX = g++
#CXX = clang++

LINK = ${CXX}

ifeq ($(CXX),g++)
	CXXFLAGS= -g -O3 -std=c++11 -fopenmp #-foffload="-lm" -foffload=nvptx-none
	LINKFLAGS=-fopenmp #-foffload="-lm" -foffload=nvptx-none
endif 

ifeq ($(CXX),xlc++_r)
	CXXFLAGS=-O3 -std=gnu++11 -g -qsmp=omp -qoffload #-Xptxas -v
	LINKFLAGS=-qsmp=omp -qoffload 
endif 

ifeq ($(CXX),clang++)
	CXXFLAGS=-O3 -std=gnu++11 -fopenmp -fopenmp-targets=nvptx64-nvidia-cuda --cuda-path=${OLCF_CUDA_ROOT}
	LINKFLAGS=-fopenmp -fopenmp-targets=nvptx64-nvidia-cuda --cuda-path=${OLCF_CUDA_ROOT}
endif 

ifeq ($(CXX),icc)
	CXXFLAGS=-O3 -qopenmp -qopt-report=5 -g
	CXXFLAGS+=-xCORE_AVX2
#	CXXFLAGS+=-xMIC_AVX512
	LINKFLAGS=-qopenmp -dynamic
endif 

ifeq ($(CXX),CC)
    CXXFLAGS=-O3 -std=c++11 -qopenmp -qopt-report=5 -qopenmp-offload #-qno-openmp-offload
    CXXFLAGS+=-xCORE-AVX2
#	CXXFLAGS+=-xMIC-AVX512
	LINKFLAGS=-qopenmp -qopenmp-offload #-dynamic
endif 

OBJ = $(SRC:.cpp=.o)

$(EXE): $(OBJ)  
	$(CXX) $(OBJ) -o $(EXE) $(LINKFLAGS)

$(OBJ1): $(SRC) 
	$(CXX) -c $(SRC) $(CXXFLAGS)

clean: 
	rm -f $(OBJ) $(EXE)

